---
- name: Provision VM and set up Docker host
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - software-properties-common
        - python3-pip
        - python3-setuptools
        - python3-apt
      when: ansible_os_family == 'Debian'

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
      when: ansible_distribution == 'Ubuntu'

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      when: ansible_distribution == 'Ubuntu'

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to the 'docker' group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes

    - name: Update sysctl settings for Docker
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: "net.ipv4.ip_forward", value: "1" }
        - { name: "net.bridge.bridge-nf-call-iptables", value: "1" }

    - name: Enable Docker service on boot
      systemd:
        name: docker
        enabled: yes

